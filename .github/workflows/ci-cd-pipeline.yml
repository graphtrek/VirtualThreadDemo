name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Kódbázis klónozása
        uses: actions/checkout@v4

      - name: Java 21 beállítása
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Függőségek telepítése és build
        run: ./mvnw clean verify

#      - name: SonarQube elemzés
#        uses: sonarsource/sonarqube-scan-action@v4
#        env:
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#      - name: Minőségellenőrzés
#        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
#        env:
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#      - name: DockerHub bejelentkezés
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          password: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Docker image build (Alpine + Java 21)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/virtualthreaddemo:latest -f Dockerfile.alpine .
          docker tag ${{ secrets.DOCKER_USERNAME }}/virtualthreaddemo:latest ${{ secrets.DOCKER_USERNAME }}/virtualthreaddemo:${{ github.sha }}

      - name: Trivy deploy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Docker kép biztonsági ellenőrzése (Trivy)
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKER_USERNAME }}/virtualthreaddemo:latest

      - name: Docker kép feltöltése
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/virtualthreaddemo:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/virtualthreaddemo:${{ github.sha }}

      - name: Docker kép mentése artifaktként
        uses: actions/upload-artifact@v4
        with:
          name: virtualthreaddemo-image
          path: |
            $(docker save ${{ secrets.DOCKER_USERNAME }}/virtualthreaddemo:latest -o virtualthreaddemo_latest.tar)
            virtualthreaddemo_latest.tar